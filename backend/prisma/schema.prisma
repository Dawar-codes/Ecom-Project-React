// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String
  role       String     @default("customer")
  created_at DateTime   @default(now())
  products   products[]
  orders     orders[]
}

model products {
  id          Int         @id @default(autoincrement())
  user        users?      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     Int?
  title       String
  description String
  price       Int
  image_url   String
  created_at  DateTime    @default(now())
  orderItems  orderItem[]
}

model orders {
  id            Int            @id @default(autoincrement())
  user          users?         @relation(fields: [userId], references: [id])
  userId        Int?
  quantity      Int
  price         Int
  created_at    DateTime       @default(now())
  orderItems    orderItem[]
  shipping_info shipping_info?
}

model orderItem {
  id        Int      @id @default(autoincrement())
  order     orders   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  product   products @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  quantity  Int
  price     Int 
}

model shipping_info {
  id         Int      @id @default(autoincrement())
  order      orders   @relation(fields: [order_Id], references: [id], onDelete: Cascade)
  order_Id   Int      @unique
  name       String
  email      String
  address    String
  city       String
  zip_code   Int
  created_at DateTime @default(now())
}
